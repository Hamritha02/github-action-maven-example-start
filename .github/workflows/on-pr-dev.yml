on: 
 push: 
   branches:
      - dev
     
permissions:
  id-token: write
  contents: read
jobs:
 pre-push_hook:

    runs-on: ubuntu-latest    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Talisman
      run: |
          wget https://github.com/thoughtworks/talisman/releases/latest/download/talisman_linux_amd64 -O talisman
          chmod +x talisman
          sudo mv talisman /usr/local/bin/

    - name: Run Talisman Checks
      run: talisman --scan 
      continue-on-error: true

    - name: Upload Report
      uses: actions/upload-artifact@v3
      with:
          name: talisman-scan-report
          path: talisman_report/talisman_reports/data
 Build_and_test:
    needs: pre-push_hook
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
         repository: Hamritha02/github-action-maven-example-start
         ref: dev
         token: ${{secrets.PAT_TOKEN }}
         
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        #cache: maven

    - name: Versioning
      id: versioning
      uses: PaulHatch/semantic-version@4.0.2
      with: 
       branch: dev
       tag-prefix: "v"
       major_pattern: "BREAKING CHANGE:"
       minor_pattern: "feat:"
       format: "v${major}.${minor}.${patch}-prereleases{increment}"    
            
    - name: Build Maven
      run: mvn -B package --file pom.xml
      
    - name: Sonarcloud-code coverage
      env:
         # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=poc-maven_maven
    - name: Check SonarCloud Quality Gate Status
      run: |
        sonar_project_key='poc-maven_maven'
        sonar_quality_gate_status=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
        "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${sonar_project_key}")
          pass_percentage_threshold=100  # Define your desired threshold here

        if [[ $(echo "$sonar_quality_gate_status" | jq -r '.projectStatus.status') == "OK" ]]; then
        echo "Quality Gate Status: passed"
        else
          echo "Quality Gate Status: failed"
          exit 1
        fi
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Unit Test
      run: mvn --batch-mode -Dmaven.test.failure.ignore=false test
      
    - name: Build Test Maven
      run: mvn -B package --file pom.xml -DskipTests
    
      
    - name: Upload to Artifact  
      run: |
       version=$(echo "${{ steps.versioning.outputs.version }}")
       mkdir staging && cp target/*jar-with-dependencies-${version}.jar staging
    - uses: actions/upload-artifact@v3
      with:
            name: Package
            path: staging
    #- name: Nexus Repo Publish
     # uses: sonatype-nexus-community/nexus-repo-github-action@master
      #with:
       # serverUrl: https://annually-quality-seagull.ngrok-free.app
        #username: admin
        #password: ${{ secrets.password }}
        #format: maven2
        #repository: maven-GH
        #coordinates: groupId=com.example artifactId=app version=1.0.0
        #assets: extension=jar
        #filename: target/*jar-with-dependencies.jar
    
   
    - name: Generate SBOM
      run: mvn org.cyclonedx:cyclonedx-maven-plugin:makeAggregateBom 
        
     
    - name: Upload SBOM report to artifact
      uses: actions/upload-artifact@v3
      with:
          name: sbom
          path: target/bom.xml
    
   
 Docker_push:
    needs: Build_and_test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
    - name: Build Container image
      run: docker build -t ${{ secrets.DOCKER_REPO }}:${{ github.sha }} .
    - name: Publish Docker image
      run: docker push ${{ secrets.DOCKER_REPO }}:${{ github.sha }}
 Deploy:
    needs: Docker_push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: Hamritha02/Deployment   # Replace with the repository URL
          ref: main 
          token: ${{secrets.PAT_TOKEN }}

 

   
      - name: Modify Manifest
        run: |
            # Replace the image and tag in the manifest file
             echo "GitHub SHA: ${{ github.sha }}"
             sed -i "s|hamritha817/github-action-maven-tutorial:.*|hamritha817/github-action-maven-tutorial:${{ github.sha }}|" ./manifest/deployment.yaml

      - name: Debug - Show Git Status After Changes
        run: git status
        shell: bash
 

      - name: Commit and Push Change
        run: |
            git config --global user.name "Hamritha02"
            git config --global user.email "hamrithaanand02@gmail.com"
            git add ./manifest/deployment.yaml
            git commit -m "Update image tag with github.sha"
            git push origin main  
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
     
